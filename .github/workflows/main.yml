name: CI

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Cache cargo registry
      uses: actions/cache@v1
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
    - name: Cache cargo index
      uses: actions/cache@v1
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
    - name: Cache cargo build
      uses: actions/cache@v1
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

    - uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Run unit and system tests
      run: cargo test --verbose

    - name: Install Python dependencies
      run: python -m pip install -r dev-requirements.txt

    - name: Run `main.rs` tests
      # Requires a debug build of `py` to exist.
      run: python -m pytest test_main.py

  coverage:
    runs-on: ubuntu-latest
    needs: test

    env:
      CARGO_TARGET_DIR: target

    steps:
    - uses: actions/checkout@v1

    - name: Get cargo-tarpaulin index
      run: curl --output cargo-tarpaulin.index https://raw.githubusercontent.com/rust-lang/crates.io-index/master/ca/rg/cargo-tarpaulin

    - uses: actions/cache@v1
      name: Cache cargo build
      with:
        path: ${{ env.CARGO_TARGET_DIR }}
        key: ${{ runner.os }}-cargo-tarpaulin-${{ hashFiles('cargo-tarpaulin.index') }}
    # Going with the assumption that the registry and index can detect when they are outdated.
    - name: Cache cargo registry
      uses: actions/cache@v1
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
    - name: Cache cargo index
      uses: actions/cache@v1
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

    - name: Install tools
      run: cargo install cargo-tarpaulin

    - name: Run coverage
      run: cargo tarpaulin -v --out Xml --exclude-files tests/*

    - uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install Black
      run: python -m pip install black

    - name: Install Rust components
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        components: rustfmt, clippy

    - name: Run clippy
      run: cargo clippy --all-targets --all-features -- -D warnings

    - name: Run rustfmt
      if: ${{ always() }}
      run: cargo fmt --all -- --check

    - name: Run Black
      if: ${{ always() }}
      run: python -m black --check --target-version py38 .
